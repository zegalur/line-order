import lineorder

# This script generates the showcase gallery.


# 15-lines arrangement, first discovered by Suzuki.
kobon_15 = [
    [15,13,14,11,12,7,9,5,8,6,10,3,4,2,],
    [3,7,5,13,6,11,9,12,8,15,10,14,4,1,],
    [2,7,13,5,11,6,12,9,15,8,14,10,1,4,],
    [5,7,6,13,9,11,8,12,10,15,14,2,1,3,],
    [4,7,2,13,3,11,15,12,14,9,1,8,10,6,],
    [7,4,13,2,11,3,12,15,9,14,8,1,10,5,],
    [6,4,5,2,3,13,15,11,14,12,1,9,10,8,],
    [9,13,11,4,12,2,15,3,14,6,1,5,10,7,],
    [8,13,4,11,2,12,3,15,6,14,5,1,7,10,],
    [11,13,12,4,15,2,14,3,1,6,5,8,7,9,],
    [10,13,8,4,9,2,6,3,5,15,7,14,1,12,],
    [13,10,4,8,2,9,3,6,15,5,14,7,1,11,],
    [12,10,11,8,9,4,6,2,5,3,7,15,1,14,],
    [15,4,2,10,3,8,6,9,5,12,7,11,1,13,],
    [14,4,10,2,8,3,9,6,12,5,11,7,13,1,],
]


# 23-lines arrangement by P.Savchuk.
kobon_23 = [
    [2,20,4,18,8,22,6,14,3,12,10,16,7,17,9,15,13,19,11,21,5,23], 
    [1,20,22,18,21,16,19,14,17,8,15,12,23,10,13,6,9,7,11,4,5,3], 
    [4,20,8,18,6,22,14,1,12,16,10,17,7,15,9,19,13,21,11,23,5,2], 
    [3,20,1,18,22,8,16,14,21,12,17,6,15,10,19,7,13,9,23,11,2,5], 
    [6,8,7,10,9,14,12,18,13,16,11,17,15,20,19,22,21,1,23,3,2,4], 
    [5,8,20,18,3,22,1,14,16,12,21,17,4,15,19,10,23,13,2,9,11,7], 
    [8,5,10,18,14,20,12,22,16,1,17,3,15,21,19,4,13,23,9,2,11,6], 
    [7,5,6,20,3,18,1,22,4,16,21,14,19,17,2,15,23,12,13,10,11,9], 
    [10,5,14,18,12,20,16,22,17,1,15,3,19,21,13,4,23,7,2,6,11,8], 
    [9,5,7,18,20,14,22,12,1,16,3,17,21,15,4,19,6,23,2,13,8,11], 
    [12,14,13,18,16,5,17,20,15,22,19,1,21,3,23,4,2,7,6,9,8,10], 
    [11,14,5,18,9,20,7,22,10,1,3,16,6,21,4,17,19,15,2,23,8,13], 
    [14,11,18,5,16,20,17,22,15,1,19,3,21,9,4,7,23,6,2,10,8,12], 
    [13,11,12,5,9,18,7,20,10,22,3,1,6,16,4,21,8,19,2,17,23,15], 
    [16,18,17,5,20,11,22,13,1,9,3,7,21,10,4,6,19,12,2,8,23,14], 
    [15,18,11,5,13,20,9,22,7,1,10,3,12,6,14,4,8,21,2,19,23,17], 
    [18,15,5,11,20,13,22,9,1,7,3,10,21,6,4,12,19,8,2,14,23,16], 
    [17,15,16,11,13,5,12,9,14,7,10,20,6,3,8,1,4,22,2,21,23,19], 
    [20,5,22,11,1,13,3,9,21,7,4,10,6,15,12,17,8,14,2,16,23,18], 
    [19,5,15,11,17,13,16,9,12,7,14,10,18,6,8,3,4,1,2,22,23,21], 
    [22,5,1,11,3,13,9,19,7,15,10,17,6,12,4,14,8,16,2,18,23,20], 
    [21,5,19,11,15,13,17,9,16,7,12,10,14,3,6,1,8,4,18,2,20,23], 
    [1,5,3,11,4,9,7,13,6,10,2,12,8,15,14,17,16,19,18,21,20,22]
]


# 27-lines arrangement by P.Savchuk.
kobon_27_1 = lineorder.reverse_order(lineorder.reindex_table([
    [2,24,18,26,20,22,4,16,6,14,8,19,12,21,10,17,3,15,5,13,7,23,11,25,9,27],
    [1,24,26,18,22,20,25,21,23,16,19,14,17,12,15,6,13,8,10,4,11,7,27,5,9,3],
    [4,18,6,20,8,22,16,24,14,26,12,19,10,21,17,1,15,23,13,25,7,11,5,27,9,2],
    [3,18,24,20,26,22,1,16,21,14,23,19,25,12,17,6,15,8,13,10,2,11,27,7,9,5],
    [6,18,8,20,10,16,14,22,12,24,19,26,17,21,15,1,13,23,7,25,11,3,27,2,9,4],
    [5,18,3,20,24,22,26,16,1,14,21,19,23,12,25,17,4,15,2,13,27,10,11,8,9,7],
    [8,18,10,20,14,16,12,22,19,24,17,26,15,21,13,1,23,5,25,3,11,2,27,4,9,6],
    [7,18,5,20,3,22,24,16,26,14,1,19,21,12,23,17,25,15,4,13,2,10,27,11,6,9],
    [10,18,12,14,11,16,13,20,17,19,15,22,21,24,23,26,25,1,27,3,2,5,4,7,6,8],
    [9,18,7,20,5,16,22,14,24,12,26,19,3,21,1,17,23,15,25,13,4,2,8,27,6,11],
    [12,18,14,9,16,20,13,19,17,22,15,24,21,26,23,1,25,5,3,7,2,4,27,8,6,10],
    [11,18,9,14,20,16,7,22,5,24,10,26,3,19,1,21,8,23,6,25,4,17,2,15,27,13],
    [14,18,16,9,20,11,19,22,17,24,15,26,21,7,1,5,23,3,25,10,4,8,2,6,27,12],
    [13,18,11,9,12,20,7,16,5,22,10,24,3,26,8,1,6,21,4,23,25,19,2,17,27,15],
    [16,18,17,20,19,9,22,11,24,13,26,7,21,5,1,3,23,10,25,8,4,6,2,12,27,14],
    [15,18,13,9,11,20,12,7,14,5,10,22,3,24,8,26,6,1,4,21,25,23,2,19,27,17],
    [18,15,20,9,19,11,22,13,24,7,26,5,21,3,1,10,23,8,25,6,4,12,2,14,27,16],
    [17,15,16,13,14,11,12,9,10,7,8,5,6,3,4,24,1,26,2,22,25,20,23,21,27,19],
    [20,15,9,17,11,13,22,7,24,5,26,10,3,12,1,8,21,6,23,4,25,14,2,16,27,18],
    [19,15,17,9,13,11,16,12,14,7,10,5,8,3,6,24,4,26,1,22,2,25,18,23,27,21],
    [22,9,24,11,26,13,7,15,5,17,3,10,1,12,8,19,6,14,4,16,25,2,23,18,27,20],
    [21,9,15,11,17,13,19,7,12,5,14,10,16,3,8,24,6,26,4,1,20,2,18,25,27,23],
    [24,9,26,11,1,7,5,13,3,15,10,17,8,12,6,19,4,14,25,16,2,21,18,20,27,22],
    [23,9,21,11,15,13,17,7,19,5,12,10,14,3,16,8,22,6,20,4,18,1,2,26,27,25],
    [26,9,1,11,5,7,3,13,10,15,8,17,6,12,4,19,14,23,16,21,2,20,18,22,27,24],
    [25,9,23,11,21,13,15,7,17,5,19,10,12,3,14,8,16,6,22,4,20,1,18,2,24,27],
    [1,9,3,5,2,7,4,11,8,10,6,13,12,15,14,17,16,19,18,21,20,23,22,25,24,26],
],9))

# 27-lines arrangement #2 by P.Savchuk.
kobon_27_2 = [ 
  [27,15,25,21,26,19,23,13,20,9,17,14,22,11,16,3,12,7,18,8,10,5,24,4,6,2], 
  [3,15,9,27,7,19,13,21,14,25,11,17,8,20,16,26,12,23,5,18,10,22,4,24,6,1], 
  [2,15,27,9,21,19,25,13,26,14,20,17,23,11,22,16,1,12,18,7,10,8,24,5,6,4], 
  [5,9,7,15,8,13,11,19,14,27,17,21,16,25,12,20,10,23,18,26,22,2,24,1,6,3], 
  [4,9,15,7,27,13,19,8,14,11,21,17,25,16,20,12,26,23,2,18,22,10,1,24,3,6], 
  [7,9,8,15,11,13,10,14,12,17,16,19,18,21,20,27,23,25,22,26,24,2,1,4,3,5], 
  [6,9,4,15,5,27,2,19,21,13,25,14,26,17,20,11,23,16,22,12,1,18,3,10,24,8], 
  [9,6,15,4,13,27,19,5,14,21,11,25,17,2,20,26,16,23,12,22,18,1,10,3,24,7], 
  [8,6,7,4,5,15,2,27,3,21,25,19,26,13,23,20,1,17,22,14,16,11,18,12,24,10], 
  [11,15,13,6,14,19,17,27,16,21,12,25,20,4,23,26,18,2,22,5,1,8,3,7,24,9], 
  [10,15,6,13,4,19,27,14,5,21,8,25,2,17,26,20,7,23,3,22,1,16,9,18,24,12], 
  [13,15,14,6,17,19,16,27,21,10,25,4,20,5,26,2,23,8,22,7,1,3,18,9,24,11], 
  [12,15,10,6,11,4,8,27,5,19,2,21,7,25,3,26,9,23,1,20,22,17,24,16,18,14], 
  [15,12,6,10,19,4,27,11,5,8,21,2,25,7,26,3,20,23,17,1,22,9,16,24,18,13], 
  [14,12,13,10,11,6,8,4,7,5,9,2,3,27,1,25,26,21,23,19,22,20,24,17,18,16], 
  [17,6,19,12,27,10,21,4,25,5,20,2,26,8,23,7,22,3,1,11,9,14,24,13,18,15], 
  [16,6,12,19,10,27,4,21,5,25,8,2,11,26,7,20,3,23,14,1,9,22,13,24,15,18],
  [19,6,21,27,20,25,23,4,26,10,2,5,22,8,1,7,3,12,9,11,24,14,13,16,15,17], 
  [18,6,16,12,17,10,14,4,11,27,8,5,13,2,7,21,3,25,9,26,1,23,15,22,24,20], 
  [21,6,27,18,25,10,4,12,5,16,2,8,26,11,7,17,3,14,23,9,1,13,22,15,24,19], 
  [20,6,18,27,12,10,16,4,17,5,11,8,14,2,13,7,19,3,9,25,1,26,15,23,24,22], 
  [23,27,25,6,26,4,2,10,5,18,8,12,7,16,3,11,1,14,9,17,13,20,15,19,24,21], 
  [22,27,6,25,18,4,10,26,5,2,12,8,16,7,11,3,17,14,20,9,13,1,19,15,21,24], 
  [25,27,26,6,2,4,1,5,3,8,7,10,9,12,11,18,14,16,13,17,15,20,19,22,21,23], 
  [24,27,22,6,23,18,20,10,12,4,16,5,17,8,11,2,14,7,13,3,19,9,21,1,15,26], 
  [27,24,6,22,4,18,10,23,5,12,2,16,8,20,11,17,7,14,3,13,9,19,1,21,15,25], 
  [26,24,25,22,23,6,20,18,21,12,16,10,17,4,14,11,19,8,13,5,7,2,9,3,15,1], 
 ]

kobon = {

################################################################################

'triangle_3_rot_symmetry' : {
    'entry_title' : '3-Line Solution (1 Triangle)',
    'entry_table' : [
        [3,2],
        [3,1],
        [2,1],
    ],
    'first_row' : 1,
    'table_font_size' : "10pt",
    'find_lines_args' : {
        'rotational_symmetry' : 3,
    },
    'draw_plines_args' : {
        'size_px' : 300.0,
    },
    'draw_lines_args' : {
        'size_px' : 300.0,
        'scale_x' : 0.7,
        'scale_y' : 0.7,
    },
},

################################################################################

'kobon_4' : {
    'entry_title' : '4-Line Solution #1 (2 Triangles)',
    'entry_table' : [
        [4,3],
        [3,4],
        [2,4,1],
        [2,3,1],
    ],
    'first_row' : 1,
    'table_font_size' : "10pt",
    'find_lines_args' : {
        'mirrored' : True,
    },
    'draw_plines_args' : {
        'size_px' : 300.0,
    },
    'draw_lines_args' : {
        'size_px' : 300.0,
        'scale_x' : 6.0,
        'scale_y' : 0.5,
    },
},

################################################################################

'kobon_4_2' : {
    'entry_title' : '4-Line Solution #2 (2 Triangles)',
    'entry_table' : [
        [4,3,2],
        [[3,4],1],
        [[4,2],1],
        [[2,3],1],
    ],
    'first_row' : 1,
    'table_font_size' : "10pt",
    'find_lines_args' : {
        'mirrored' : True,
    },
    'draw_plines_args' : {
        'size_px' : 300.0,
    },
    'draw_lines_args' : {
        'size_px' : 300.0,
        'epsilon' : 1e-4, 
        'scale_x' : 0.65,
    },
},

################################################################################

'pentagram_5_rot_symmetry' : {
    'entry_title' : '5-Line Solution (5 Triangles)',
    'entry_table' : [
        [5,3,4,2], 
        [3,5,4,1],
        [2,5,1,4],
        [5,2,1,3],
        [4,2,3,1],
    ],
    'first_row' : 1,
    'table_font_size' : "10pt",
    'find_lines_args' : {
        'rotational_symmetry' : 5,
    },
    'draw_plines_args' : {
        'size_px' : 300.0,
    },
    'draw_lines_args' : {
        'size_px' : 300.0,
        'scale_x' : 0.7,
        'scale_y' : 0.7,
    },
},

################################################################################

'kobon_6_1' : {
    'entry_title' : '6-Line Solution #1 (7 Triangles)',
    'entry_table' : [
        [6,4,5,3],
        [4,[3,6],5],
        [4,[6,2],5,1],
        [3,2,6,1,5],
        [6,2,3,1,4],
        [5,[2,3],4,1],
    ],
    'first_row' : 1,
    'table_font_size' : "10pt",
    'find_lines_args' : {
        'mirrored' : True,
        'ineq_max' : 1.0,
        'ineq_epsilon' : 0.2,
    },
    'draw_plines_args' : {
        'size_px' : 300.0,
    },
    'draw_lines_args' : {
        'epsilon' : 1e-4, 
        'size_px' : 300,
        'scale_y' : 0.8,
    },
},

################################################################################

'kobon_6_2' : {
    'entry_title' : '6-Line Solution #2 (7 Triangles)',
    'entry_table' : [
        [[3,4],[2,5],6],
        [3,4,[5,1],6],
        [2,[4,1],[5,6]],
        [2,[1,3],6,5],
        [[1,2],[6,3],4],
        [1,2,[3,5],4],
    ],
    'first_row' : 1,
    'table_font_size' : "10pt",
    'find_lines_args' : {
        'rotational_symmetry' : 3,
    },
    'draw_plines_args' : {
        'size_px' : 300.0,
    },
    'draw_lines_args' : {
        'epsilon' : 1e-4, 
        'size_px' : 300,
        'scale_x' : 0.8,
        'scale_y' : 0.8,
    },
},

################################################################################

'kobon_7' : {
    'entry_title' : '7-Line Solution (11 Triangles)',
    'entry_table' : [
        [2,3,4,6,5,7,],
        [1,3,6,4,7,5,],
        [1,2,6,7,4,5,],
        [1,6,2,7,3,5,],
        [6,1,7,2,3,4,],
        [5,1,4,2,3,7,],
        [1,5,2,4,3,6,],
    ],
    'first_row' : 3,
    'table_font_size' : "10pt",
    'find_lines_args' : {
        'ineq_epsilon' : 0.13,
        'mirrored' : True,
    },
    'draw_plines_args' : {
        'size_px' : 400.0,
    },
    'draw_lines_args' : {
        'size_px' : 400.0,
    },
},

################################################################################

'kobon_8' : {
    'entry_title' : '8-Line Solution (15 Triangles)',
    'entry_table' : [
        [8,6,7,4,5,2,3],
        [6,[4,8],7,5,1,3],
        [4,6,5,7,8,1,2],
        [3,6,[8,2],7,1,5],
        [6,3,[7,8],2,1,4],
        [5,3,4,2,8,1,7],
        [3,[8,5],2,4,1,6],
        [3,[5,7],[2,4],6,1],
    ],
    'first_row' : 1,
    'table_font_size' : "10pt",
    'find_lines_args' : {
    },
    'draw_plines_args' : {
        'size_px' : 400.0,
    },
    'draw_lines_args' : {
        'size_px' : 400.0,
        'epsilon' : 1e-4, 
    },
},

################################################################################

'kobon_9_3_rot_symmetry' : {
    'entry_title' : '9-Line Solution (21 Triangles)',
    'entry_table' : [
        [9,7,8,5,6,3,4,2],
        [3,7,5,9,6,8,4,1],
        [2,7,9,5,8,6,1,4],
        [5,7,6,9,8,2,1,3],
        [4,7,2,9,3,8,1,6],
        [7,4,9,2,8,3,1,5],
        [6,4,5,2,3,9,1,8],
        [9,4,2,6,3,5,1,7],
        [8,4,6,2,5,3,7,1],
    ],
    'first_row' : 1,
    'table_font_size' : "8pt",
    'find_lines_args' : {
        'rotational_symmetry' : 3,
        'ineq_epsilon' : 0.3,
        'ineq_max' : 20.0,
        'min_angle' : 0.2,
    },
    'draw_plines_args' : {
        'size_px' : 400.0,
    },
    'draw_lines_args' : {
        'size_px' : 400.0,
    },
},

################################################################################

'kobon_10_25tri_wajnberg' : {
    'entry_title' : '10-Line Solution (25 Triangles) by Wajnberg',
    'entry_table' : [
        [10,8,9,6,7,4,5,3],
        [8,[4,10],6,7,[3,9],5],
        [4,8,6,10,7,[9,2],5,1],
        [3,8,[10,2],6,9,7,1,5],
        [6,8,7,10,9,2,3,1,4],
        [5,8,3,10,2,4,9,1,7],
        [8,5,10,3,2,9,4,1,6],
        [7,5,6,3,4,2,10,1,9],
        [10,5,[2,3],7,4,6,1,8],
        [9,5,7,3,6,[2,4],8,1],
    ],
    'first_row' : 1,
    'table_font_size' : "8pt",
    'find_lines_args' : {
        'mirrored' : True,
        'ineq_epsilon' : 0.3,
        'ineq_max' : 20.0,
        'min_angle' : 0.2,
    },
    'draw_plines_args' : {
        'title_text' : "by Wajnberg",
        'size_px' : 400.0,
    },
    'draw_lines_args' : {
        'title_text' : "by Wajnberg",
        'size_px' : 400.0,
        'epsilon' : 1e-4, 
    },
},

################################################################################

'kobon_11_32tri' : {
    'entry_title' : '11-Line Solution (32 Triangles) by Honma',
    'entry_table' : [
        [3,2,5,4,7,6,11,9,10,8],
        [3,1,5,11,7,10,6,9,4,8],
        [2,1,11,5,10,7,9,6,8,4],
        [5,1,7,11,6,10,9,2,8,3],
        [4,1,2,11,3,10,9,7,8,6],
        [7,1,11,4,10,2,9,3,8,5],
        [6,1,4,11,2,10,3,9,5,8],
        [9,11,10,1,2,4,3,6,5,7],
        [8,11,1,10,4,2,6,3,7,5],
        [11,8,1,9,4,6,2,7,3,5],
        [10,8,9,1,6,4,7,2,5,3],
    ],
    'first_row' : 3,
    'table_font_size' : "10pt",
    'find_lines_args' : {
        'ineq_max' : 4.0,
    },
    'draw_plines_args' : {
        'size_px' : 400.0,
        'title_text' : "by Honma",
    },
    'draw_lines_args' : {
        'size_px' : 400.0,
        'title_text' : "by Honma",
    },
},

################################################################################

'kobon_12_38tri' : {
    'entry_title' : '12-Line Solution (38 Triangles) by Kabanovitch',
    'entry_table' : [
        [12,5,[9,11],7,10,[4,6],8,2,3],
        [5,12,7,9,4,11,6,10,8,1,3],
        [5,4,7,6,9,8,11,10,12,1,2],
        [5,3,7,12,9,2,11,10,[6,1],8],
        [4,3,2,12,1,11,9,10,7,8,6],
        [7,3,9,12,11,2,10,[1,4],8,5],
        [6,3,4,12,2,9,11,1,10,5,8],
        [9,3,11,12,10,2,1,4,6,5,7],
        [8,3,6,12,4,2,7,[11,1],5,10],
        [11,3,12,8,2,6,4,1,7,5,9],
        [10,3,8,12,6,2,4,7,[1,9],5],
        [3,10,8,11,6,9,4,7,2,5,1],
    ],
    'first_row' : 3,
    'table_font_size' : "10pt",
    'find_lines_args' : {
        'ineq_max' : 4.0,
    },
    'draw_plines_args' : {
        'title_text' : "by Kabanovitch",
        'size_px' : 400.0,
    },
    'draw_lines_args' : {
        'title_text' : "by Kabanovitch",
        'size_px' : 400.0,
        'epsilon' : 1e-4,
    },
},

################################################################################

'kobon_13_m_sym_47tri' : {
    'entry_title' : '13-Line Solution (47 Triangles) by Kabanovitch',
    'entry_table' : [
        [13,9,11,10,12,7,8,3,5,4,6,2],
        [3,9,4,10,7,13,8,11,5,12,6,1],
        [2,9,13,10,11,7,12,8,1,5,6,4],
        [9,2,10,13,7,11,8,12,5,1,6,3],
        [9,7,10,8,13,11,2,12,4,1,3,6],
        [7,9,8,10,11,13,12,2,1,4,3,5],
        [6,9,5,10,2,13,4,11,3,12,1,8],
        [9,6,10,5,13,2,11,4,12,3,1,7],
        [8,6,7,5,4,2,3,13,1,11,12,10],
        [6,8,5,7,2,4,13,3,11,1,12,9],
        [6,13,5,2,8,4,7,3,10,1,9,12],
        [13,6,2,5,4,8,3,7,1,10,9,11],
        [12,6,11,5,8,2,7,4,10,3,9,1],
    ],
    'first_row' : 1,
    'table_font_size' : "10pt",
    'find_lines_args' : {
        'mirrored' : True,
    },
    'draw_plines_args' : {
        'title_text' : "by Kabanovitch",
        'size_px' : 400.0,
    },
    'draw_lines_args' : {
        'title_text' : "by Kabanovitch",
        'size_px' : 400.0,
    },
},

################################################################################

'kobon_14_53tri' : {
    'entry_title' : '14-Line Solution (53 Triangles) by Johannes Bader',
    'entry_table' : [
        [14,12,13,7,10,6,9,3,8,5,11,4],
        [3,7,5,6,4,10,9,12,8,13,11,14],
        [2,7,12,6,13,10,14,9,1,8,11,5],
        [5,7,6,2,10,12,9,13,8,14,11,1],
        [4,7,2,6,12,10,13,9,14,8,1,11,3],
        [7,4,2,5,12,3,13,14,10,1,9,11,8],
        [6,4,5,2,3,12,14,13,1,10,11,9],
        [9,10,12,2,13,4,14,5,1,3,11,6],
        [8,10,2,12,4,13,5,14,3,1,6,11,7],
        [8,9,2,4,12,5,13,3,14,6,1,7,11],
        [12,13,2,14,4,1,5,3,8,6,9,7,10],
        [11,8,2,9,4,10,5,6,3,7,14,1,13],
        [11,2,8,4,9,5,10,3,6,14,7,1,12],
        [2,11,4,8,5,9,3,10,6,13,7,12,1],
    ],
    'first_row' : 1,
    'table_font_size' : "10pt",
    'find_lines_args' : {
    },
    'draw_plines_args' : {
        'title_text' : "by Johannes Bader",
        'size_px' : 400.0,
    },
    'draw_lines_args' : {
        'title_text' : "by Johannes Bader",
        'size_px' : 500.0,
    },
},

################################################################################

'kobon_15_5_rot_symmetry' : {
    'entry_title' : '15-Line Solution (65 Triangles, 5-rotational symmetry)'+
                    ' by Toshitaka Suzuki',
    'entry_table' : kobon_15,
    'first_row' : 1,
    'table_font_size' : "8pt",
    'find_lines_args' : {
        'rotational_symmetry' : 5,
        'ineq_epsilon' : 0.3,
    },
    'draw_plines_args' : {
        'title_text' : 'by Toshitaka Suzuki',
        'size_px' : 600.0,
    },
    'draw_lines_args' : {
        'title_text' : 'by Toshitaka Suzuki',
        'size_px' : 600.0,
    },
},

################################################################################

'kobon_16_72tri' : {
    'entry_title' : ('16-Line Solution (72 Triangles, ' + 
                     'based on 15-line solution by ' + 
                     'Toshitaka Suzuki) by Johannes Bader'),
    'entry_table' : [
        [16,14,15,12,13,8,10,6,9,7,11,4,5,3,],
        [3,4,5,6,7,8,9,10,11,12,13,14,15,16,],
        [2,4,8,6,14,7,12,10,13,9,16,11,15,5,1,],
        [2,3,8,14,6,12,7,13,10,16,9,15,11,1,5,],
        [2,6,8,7,14,10,12,9,13,11,16,15,3,1,4,],
        [2,5,8,3,14,4,12,16,13,15,10,1,9,11,7,],
        [2,8,5,14,3,12,4,13,16,10,15,9,1,11,6,],
        [2,7,5,6,3,4,14,16,12,15,13,1,10,11,9,],
        [2,10,14,12,5,13,3,16,4,15,7,1,6,11,8,],
        [2,9,14,5,12,3,13,4,16,7,15,6,1,8,11,],
        [2,12,14,13,5,16,3,15,4,1,7,6,9,8,10,],
        [2,11,14,9,5,10,3,7,4,6,16,8,15,1,13,],
        [2,14,11,5,9,3,10,4,7,16,6,15,8,1,12,],
        [2,13,11,12,9,10,5,7,3,6,4,8,16,1,15,],
        [2,16,5,3,11,4,9,7,10,6,13,8,12,1,14,],
        [2,15,5,11,3,9,4,10,7,13,6,12,8,14,1,],
    ],
    'first_row' : 1,
    'table_font_size' : "8pt",
    'find_lines_args' : {
    },
    'draw_plines_args' : {
        'title_text' : 'by Johannes Bader (based on 15-line solution by ' + 
                        'Toshitaka Suzuki)',
        'size_px' : 600.0,
    },
    'draw_lines_args' : {
        'title_text' : 'by Johannes Bader (based on 15-line solution by ' + 
                        'Toshitaka Suzuki)',
        'size_px' : 800.0,
    },
},

################################################################################

'kobon_17_85tri' : {
    'entry_title' : '17-Line Solution (85 Triangles) by Johannes Bader',
    'entry_table' : [
        [2,6,4,12,5,8,3,10,7,14,11,13,9,16,15,17],
        [1,6,12,4,14,8,16,10,13,5,11,7,17,9,15,3],
        [4,6,5,12,8,1,10,14,7,13,11,16,9,17,15,2],
        [3,6,1,12,2,14,16,8,13,10,17,11,15,7,9,5],
        [6,3,12,1,8,14,10,16,13,2,11,17,7,15,9,4],
        [5,3,4,1,2,12,16,14,17,13,15,10,11,8,9,7],
        [8,12,10,1,14,3,13,16,11,2,17,5,15,4,9,6],
        [7,12,3,1,5,14,2,16,4,13,17,10,15,11,6,9],
        [10,12,11,14,13,1,16,3,17,2,15,5,4,7,6,8],
        [9,12,7,1,3,14,5,16,2,13,4,17,8,15,6,11],
        [12,9,14,1,13,3,16,7,2,5,17,4,15,8,6,10],
        [11,9,10,7,8,3,5,1,4,2,6,16,17,14,15,13],
        [14,9,1,11,3,7,16,5,2,10,4,8,17,6,15,12],
        [13,9,11,1,7,3,10,5,8,2,4,16,6,17,12,15],
        [16,1,17,3,2,9,5,7,4,11,8,10,6,13,12,14],
        [15,1,9,3,11,7,13,5,10,2,8,4,14,6,12,17],
        [1,15,3,9,2,7,5,11,4,10,8,13,6,14,12,16],
    ],
    'first_row' : 1,
    'table_font_size' : "8pt",
    'find_lines_args' : {
    },
    'draw_plines_args' : {
        'title_text' : 'by Johannes Bader',
        'size_px' : 600.0,
    },
    'draw_lines_args' : {
        'title_text' : 'by Johannes Bader',
        'size_px' : 800.0,
    },
},

################################################################################

'kobon_18_93tri' : {
    'entry_title' : '18-Line Solution (93 Triangles) by Johannes Bader',
    'entry_table' : [
        [18,17,16,13,15,7,12,5,10,9,14,6,11,4,8,3],
        [3,5,4,7,6,13,9,17,10,12,8,15,11,16,14,18],
        [2,5,17,7,13,4,16,9,12,6,15,10,18,11,14,8,1],
        [5,2,7,17,13,3,16,18,12,15,9,10,6,14,11,1,8],
        [4,2,3,17,18,13,16,7,15,12,1,10,14,9,11,6,8],
        [7,2,13,17,9,16,12,3,15,18,10,4,14,1,11,5,8],
        [6,2,4,17,3,13,18,16,5,15,1,12,14,10,11,9],
        [9,13,10,17,12,2,15,16,11,18,14,3,1,4,5,6],
        [8,13,2,17,6,16,3,12,18,15,4,10,1,14,5,11,7],
        [13,8,17,2,12,16,15,3,18,6,4,9,1,5,14,7,11],
        [13,12,17,15,2,16,8,18,3,14,4,1,6,5,9,7,10],
        [13,11,17,8,2,10,16,6,3,9,18,4,15,5,1,7,14],
        [12,11,10,8,9,2,6,17,4,3,7,18,5,16,1,15],
        [15,17,16,2,18,8,3,11,4,6,1,9,5,10,7,12],
        [14,17,11,2,8,16,10,3,6,18,9,4,12,5,7,1,13],
        [17,14,2,11,8,15,10,12,6,9,3,4,18,7,5,13,1],
        [16,14,15,11,12,8,10,2,9,6,13,4,7,3,5,18,1],
        [2,14,8,11,3,10,6,15,9,12,4,16,7,13,5,17,1],
    ],
    'first_row' : 1,
    'table_font_size' : "8pt",
    'find_lines_args' : {
        #'rotational_symmetry' : 3,
    },
    'draw_plines_args' : {
        'title_text' : 'by Johannes Bader',
        'size_px' : 600.0,
    },
    'draw_lines_args' : {
        'title_text' : 'by Johannes Bader',
        'size_px' : 800.0,
    },
},

################################################################################

'kobon_19_107tri' : {
    'entry_title' : '19-Line Solution (107 Triangles) by Kyle Wood',
    'entry_table' : [
        [18,19,12,16,14,17,13,15,10,11,6,8,4,7,5,9,2,3],
        [18,6,12,4,14,5,13,10,19,11,16,8,17,7,15,9,1,3],
        [4,6,5,12,8,14,10,18,11,13,7,16,9,17,15,19,1,2],
        [3,6,18,12,2,14,19,13,16,10,17,11,15,8,1,7,9,5],
        [6,3,12,18,14,2,13,19,10,16,11,17,8,15,7,1,9,4],
        [5,3,4,18,2,12,19,14,16,13,17,10,15,11,1,8,9,7],
        [8,12,10,14,11,18,13,3,16,19,17,2,15,5,1,4,9,6],
        [7,12,3,14,18,10,13,11,19,16,2,17,5,15,4,1,6,9],
        [10,12,11,14,13,18,16,3,17,19,15,2,1,5,4,7,6,8],
        [9,12,7,14,3,18,8,13,2,19,5,16,4,17,6,15,1,11],
        [12,9,14,7,18,3,13,8,19,2,16,5,17,4,15,6,1,10],
        [11,9,10,7,8,3,5,18,4,2,6,19,1,16,17,14,15,13],
        [14,9,18,7,3,11,8,10,2,5,19,4,16,6,17,1,15,12],
        [13,9,11,7,10,3,8,18,5,2,4,19,6,16,1,17,12,15],
        [16,18,17,3,19,9,2,7,5,8,4,11,6,10,1,13,12,14],
        [15,18,9,3,7,19,8,2,11,5,10,4,13,6,14,1,12,17],
        [18,15,3,9,19,7,2,8,5,11,4,10,6,13,1,14,12,16],
        [17,15,16,9,13,7,11,3,10,8,14,5,12,4,6,2,1,19],
        [3,15,9,17,7,16,8,11,2,10,5,13,4,14,6,12,1,18],
    ],
    'first_row' : 1,
    'table_font_size' : "8pt",
    'find_lines_args' : {
        'mirrored' : True,
    },
    'draw_plines_args' : {
        'title_text' : 'by Kyle Wood',
        'size_px' : 600.0,
    },
    'draw_lines_args' : {
        'title_text' : 'by Kyle Wood',
        'size_px' : 800.0,
    },
},

################################################################################

'kobon_20_116tri' : {
    'entry_title' : '20-Line Solution (116 Triangles, based on n=19 solution)\n'
                    + ' by Kyle Wood',
    'entry_table' : [
        [4,3,10,6,8,5,9,7,12,11,16,14,18,15,17,13,20,19],
        [3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],
        [2,4,1,10,16,8,18,9,17,12,20,11,14,6,15,5,13,7,19],
        [2,3,1,20,16,18,10,17,8,14,12,19,11,15,9,13,6,7,5],
        [2,6,10,8,1,9,16,12,18,11,17,14,20,15,3,13,19,7,4],
        [2,5,10,1,8,16,9,18,12,17,11,20,14,3,15,19,13,4,7],
        [2,8,10,9,1,12,16,11,18,14,17,15,20,13,3,19,5,4,6],
        [2,7,10,5,1,6,16,3,18,20,17,4,14,19,12,15,11,13,9],
        [2,10,7,1,5,16,6,18,3,17,20,12,14,11,19,15,4,13,8],
        [2,9,7,8,5,6,1,3,16,20,18,4,17,19,14,15,12,13,11],
        [2,12,1,16,7,18,5,17,6,20,3,14,9,19,4,15,8,13,10],
        [2,11,1,7,16,5,18,6,17,3,20,9,14,4,19,8,15,10,13],
        [2,14,16,15,18,17,1,20,7,3,5,19,6,4,9,8,11,10,12],
        [2,13,16,1,18,7,17,5,20,6,3,11,9,12,4,8,19,10,15],
        [2,16,13,18,1,17,7,20,5,3,6,19,9,4,11,8,12,10,14],
        [2,15,13,14,1,11,7,12,5,9,6,8,3,10,20,4,18,19,17],
        [2,18,13,1,15,7,14,5,11,6,12,3,9,20,8,4,10,19,16],
        [2,17,13,15,1,14,7,11,5,12,6,9,3,8,20,10,4,16,19],
        [2,20,1,3,7,5,13,6,15,9,11,4,12,8,14,10,17,16,18],
        [2,19,1,13,7,15,5,14,6,11,3,12,9,17,8,18,10,16,4],
    ],
    'first_row' : 1,
    'table_font_size' : "8pt",
    'find_lines_args' : {
        'mirrored' : True,
        'ineq_epsilon' : 0.03,
    },
    'draw_plines_args' : {
        'title_text' : 'by Kyle Wood',
        'size_px' : 600.0,
    },
    'draw_lines_args' : {
        'title_text' : 'by Kyle Wood',
        'size_px' : 1400.0,
    },
},

################################################################################

'kobon_21_133tri_1' : {
    'entry_title' : '21-Line Solution #1 (133 Triangles, ' + 
                    '3-rotational symmetry) by P.Savchuk',
    'entry_table' : [
        [21,15,19,17,20,16,18,13,14,11,12,9,10,7,8,5,6,3,4,2],
        [3,15,5,17,11,21,13,19,7,16,9,14,12,20,10,18,6,8,4,1],
        [2,15,21,17,19,11,16,13,20,14,18,9,12,7,10,5,8,6,1,4],
        [5,15,7,11,6,13,9,17,12,19,14,16,10,21,18,20,8,2,1,3],
        [4,15,2,17,21,11,19,13,16,7,14,9,20,12,18,10,3,8,1,6],
        [7,15,11,4,13,17,9,19,12,16,14,21,10,20,18,2,8,3,1,5],
        [6,15,4,11,17,13,21,19,2,16,5,14,20,9,18,12,3,10,1,8],
        [9,11,10,13,12,15,14,17,16,19,18,21,20,4,2,6,3,5,1,7],
        [8,11,15,13,4,17,6,19,21,16,2,14,5,20,7,18,3,12,1,10],
        [11,8,13,15,12,17,14,19,16,4,21,6,20,2,18,5,3,7,1,9],
        [10,8,9,15,6,4,7,17,2,21,5,19,3,16,20,13,18,14,1,12],
        [13,8,15,10,17,4,19,6,16,21,14,2,20,5,18,7,3,9,1,11],
        [12,8,10,15,9,4,6,17,7,21,2,19,5,16,3,20,11,18,1,14],
        [15,8,17,10,19,4,16,6,21,12,2,9,5,7,20,3,18,11,1,13],
        [14,8,12,10,13,9,11,6,7,4,5,2,3,21,1,19,20,17,18,16],
        [17,8,19,10,4,14,6,12,21,9,2,7,5,13,3,11,20,1,18,15],
        [16,8,14,10,12,4,9,6,13,7,11,2,5,21,3,19,1,20,15,18],
        [19,8,21,4,20,6,2,10,5,12,7,9,3,14,11,13,1,16,15,17],
        [18,8,16,10,14,4,12,6,9,21,7,2,13,5,11,3,17,1,15,20],
        [21,8,4,18,6,10,2,12,5,9,7,14,3,13,11,16,1,17,15,19],
        [20,8,18,4,10,6,14,12,16,9,19,7,13,2,11,5,17,3,15,1],
    ],
    'first_row' : 1,
    'table_font_size' : "8pt",
    'find_lines_args' : {
        'rotational_symmetry' : 3,
    },
    'draw_plines_args' : {
        'title_text' : 'by Pavlo Savchuk',
        'size_px' : 600.0,
    },
    'draw_lines_args' : {
        'title_text' : 'by Pavlo Savchuk',
        'size_px' : 800.0,
    },
},

################################################################################

'kobon_21_133tri_2' : {
    'entry_title' : '21-Line Solution #2 (133 Triangles, ' + 
                    '3-rotational symmetry) by P.Savchuk',
    'entry_table' : [
        [2,4,3,6,5,8,7,10,9,12,11,14,13,18,16,20,17,19,15,21,],
        [1,4,8,6,20,10,18,12,14,9,16,7,19,11,21,13,17,5,15,3,],
        [4,1,6,8,5,10,7,12,9,20,14,18,11,16,13,19,17,21,15,2,],
        [3,1,2,8,20,6,18,10,21,14,16,12,19,9,17,11,13,7,15,5,],
        [6,1,8,3,10,20,12,18,9,14,7,16,11,19,13,21,17,2,15,4,],
        [5,1,3,8,2,20,4,18,21,10,16,14,19,12,17,9,13,11,15,7,],
        [8,1,10,3,12,20,9,18,14,5,16,2,19,21,11,17,13,4,15,6,],
        [7,1,5,3,6,2,4,20,21,18,19,16,17,14,15,12,13,10,11,9,],
        [10,1,12,3,20,7,18,5,14,2,16,21,19,4,17,6,13,15,11,8,],
        [9,1,7,3,5,20,2,18,4,21,6,16,19,14,17,12,15,13,8,11,],
        [12,1,14,20,18,3,16,5,19,2,21,7,17,4,13,6,15,9,8,10,],
        [11,1,9,3,7,20,5,18,2,14,21,16,4,19,6,17,10,15,8,13,],
        [14,1,18,20,16,3,19,5,21,2,17,7,4,11,6,9,15,10,8,12,],
        [13,1,11,20,3,18,7,5,9,2,12,21,4,16,6,19,10,17,8,15,],
        [16,18,17,20,19,1,21,3,2,5,4,7,6,11,9,13,10,12,8,14,],
        [15,18,1,20,13,3,11,5,7,2,9,21,12,4,14,6,10,19,8,17,],
        [18,15,20,1,19,3,21,5,2,13,7,11,4,9,6,12,10,14,8,16,],
        [17,15,16,1,13,20,11,3,14,7,9,5,12,2,10,4,6,21,8,19,],
        [20,15,1,17,3,13,5,11,2,7,21,9,4,12,6,14,10,16,8,18,],
        [19,15,17,1,16,13,18,11,14,3,9,7,12,5,10,2,6,4,8,21,],
        [1,15,3,17,5,13,2,11,7,19,9,16,12,14,4,10,6,18,8,20,],
    ],
    'first_row' : 8,
    'table_font_size' : "8pt",
    'find_lines_args' : {
        'rotational_symmetry' : 3,
    },
    'draw_plines_args' : {
        'title_text' : 'by Pavlo Savchuk',
        'size_px' : 600.0,
    },
    'draw_lines_args' : {
        'title_text' : 'by Pavlo Savchuk',
        'size_px' : 800.0,
    },
},

################################################################################

'kobon_21_133tri_3' : {
    'entry_title' : '21-Line Solution #3 (133 Triangles, ' + 
                    'mirror symmetry) by P.Savchuk',
    'entry_table' : [
        [21,19,20,17,18,15,16,13,14,11,12,9,10,7,8,5,6,3,4,2],
        [3,19,13,15,9,17,7,18,11,21,12,16,5,14,6,10,8,20,4,1],
        [2,19,21,15,17,13,18,9,16,11,20,12,14,7,10,5,8,6,1,4],
        [5,13,7,9,6,15,11,19,12,17,8,16,14,18,10,21,20,2,1,3],
        [4,13,19,9,15,7,17,11,18,12,21,16,2,14,20,10,3,8,1,6],
        [7,13,9,4,15,19,11,17,12,18,16,21,14,2,10,20,8,3,1,5],
        [6,13,4,9,19,15,5,17,2,18,21,11,16,12,20,14,3,10,1,8],
        [9,13,11,15,12,19,17,4,16,18,14,21,10,2,20,6,3,5,1,7],
        [8,13,6,4,7,19,5,15,2,17,21,18,3,16,20,11,14,12,1,10],
        [11,13,12,15,14,17,16,19,18,4,21,8,2,6,20,5,3,7,1,9],
        [10,13,8,15,4,19,6,17,5,18,2,21,7,16,3,20,9,14,1,12],
        [13,10,15,8,19,4,17,6,18,5,21,2,16,7,20,3,14,9,1,11],
        [12,10,11,8,9,6,7,4,5,19,2,15,21,17,3,18,20,16,1,14],
        [15,10,17,19,16,4,18,8,21,6,2,5,20,7,3,12,9,11,1,13],
        [14,10,12,8,11,4,6,19,7,5,9,2,13,21,3,17,20,18,1,16],
        [17,10,19,14,4,8,18,6,21,5,2,12,7,11,3,9,20,13,1,15],
        [16,10,14,19,8,4,12,6,11,5,7,2,9,21,13,3,15,20,1,18],
        [19,10,4,14,8,16,6,12,5,11,2,7,21,9,3,13,20,15,1,17],
        [18,10,16,14,17,8,12,4,11,6,15,7,9,5,13,2,3,21,1,20],
        [21,4,2,8,6,10,5,14,7,12,3,11,9,16,13,18,15,17,1,19],
        [20,4,10,8,14,6,16,5,12,2,11,7,18,9,17,13,15,3,19,1],
    ],
    'first_row' : 1,
    'table_font_size' : "8pt",
    'find_lines_args' : {
        'mirrored' : True,
        'ineq_epsilon' : 0.03,
        'main_coefficient' : 0.5,
    },
    'draw_plines_args' : {
        'title_text' : 'by Pavlo Savchuk (2025)',
        'size_px' : 600.0,
    },
    'draw_lines_args' : {
        'title_text' : 'by Pavlo Savchuk (2025)',
        'size_px' : 2000.0,
    },
},

################################################################################

'kobon_22_143tri' : {
    'entry_title' : '22-Line Solution (143 Triangles, ' + 
                    'based on n=21 solution) by P.Savchuk',
    'entry_table' : [
        [22,16,20,18,21,17,19,14,15,12,13,10,11,8,9,6,7,4,5,3],
        [3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],
        [2,4,16,6,18,14,22,12,20,8,17,10,15,13,19,11,21,7,9,5,1],
        [2,3,16,22,18,20,14,17,12,19,15,21,10,13,8,11,6,9,7,1,5],
        [2,6,16,8,14,12,18,10,20,13,17,15,22,11,19,7,21,9,3,1,4],
        [2,5,16,3,18,22,14,20,12,17,8,15,10,19,13,21,11,4,9,1,7],
        [2,8,16,12,14,10,18,13,20,15,17,11,22,19,5,21,3,9,4,1,6],
        [2,7,16,5,14,18,12,22,20,3,17,6,15,19,10,21,13,4,11,1,9],
        [2,10,12,11,14,13,16,15,18,17,20,19,22,21,5,3,7,4,6,1,8],
        [2,9,12,16,14,7,18,5,20,22,17,3,15,6,19,8,21,4,13,1,11],
        [2,12,9,14,16,13,18,15,20,17,7,22,5,19,3,21,6,4,8,1,10],
        [2,11,9,10,16,7,14,5,18,8,22,3,20,6,17,4,19,21,15,1,13],
        [2,14,9,16,11,18,7,20,5,17,22,15,3,19,6,21,8,4,10,1,12],
        [2,13,9,11,16,10,7,12,5,8,18,3,22,6,20,4,17,21,19,1,15],
        [2,16,9,18,11,20,7,17,5,22,13,3,10,6,8,19,4,21,12,1,14],
        [2,15,9,13,11,14,10,12,7,8,5,6,3,4,22,1,20,21,18,19,17],
        [2,18,9,20,11,7,15,5,13,22,10,3,8,6,12,4,14,21,1,19,16],
        [2,17,9,15,11,13,7,10,5,12,8,14,3,6,22,4,20,1,21,16,19],
        [2,20,9,22,7,5,11,3,13,6,10,8,15,4,12,21,14,1,17,16,18],
        [2,19,9,17,11,15,7,13,5,10,22,8,3,12,6,14,4,18,1,16,21],
        [2,22,9,5,7,3,11,6,13,8,10,4,15,12,19,14,17,1,18,16,20],
        [2,21,9,19,7,11,5,15,13,17,10,20,8,12,3,14,6,18,4,16,1],
    ],
    'first_row' : 1,
    'table_font_size' : "8pt",
    'find_lines_args' : {
    },
    'draw_plines_args' : {
        'title_text' : 'by Pavlo Savchuk',
        'size_px' : 600.0,
    },
    'draw_lines_args' : {
        'title_text' : 'by Pavlo Savchuk',
        'size_px' : 2000.0,
    },
},

################################################################################

'kobon_23_161tri' : {
    'entry_title' : '23-Line Solution (161 Triangles) by P.Savchuk ' + 
                    '(table found using Kissat)',
    'entry_table' : kobon_23,
    'first_row' : 1,
    'table_font_size' : "8pt",
    'find_lines_args' : {
        "main_coefficient" : 0.5,
    },
    'draw_plines_args' : {
        'title_text' : 'by Pavlo Savchuk (2025)',
        'size_px' : 600.0,
    },
    'draw_lines_args' : {
        'title_text' : 'by Pavlo Savchuk (2025)',
        'size_px' : 5000.0,
    },
},

################################################################################

'kobon_24_172tri' : {
    'entry_title' : '24-Line Solution (172 Triangles) by P.Savchuk ' + 
                    '(based on 23-line solution)',
    'entry_table' : lineorder.add_1_2_line(lineorder.reindex_table(
                        lineorder.reverse_order(kobon_23), 2), True),
    'first_row' : 1,
    'table_font_size' : "8pt",
    'find_lines_args' : {
        "main_coefficient" : 0.5,
    },
    'draw_plines_args' : {
        'title_text' : 'by Pavlo Savchuk (2025)',
        'size_px' : 600.0,
    },
    'draw_lines_args' : {
        'title_text' : 'by Pavlo Savchuk (2025)',
        'size_px' : 5000.0,
        'scale_x' : 4.0,
        'scale_y' : 6.0,
    },
},

################################################################################

'kobon_25_191tri' : {
    'entry_title' : '25-Line Solution (191 Triangles, Mirror Symmetry).\n' +
                    'Table by Kyle Wood. (previously known)',
    'entry_table' : [
        [2,8,4,12,6,10,7,11,5,9,3,14,13,24,18,22,16,20,17,21,15,23,19,25],
        [1,8,24,12,22,10,20,11,21,9,23,14,25,13,18,4,16,6,17,7,15,5,19,3],
        [4,8,6,12,7,10,5,11,9,1,14,24,13,22,18,20,16,21,17,23,15,25,19,2],
        [3,8,1,12,24,10,22,11,20,9,21,14,23,13,25,18,2,16,17,6,15,7,19,5],
        [6,8,7,12,10,3,11,1,9,24,14,22,13,20,18,21,16,23,17,25,15,2,19,4],
        [5,8,3,12,1,10,24,11,22,9,20,14,21,13,23,18,25,16,2,17,4,15,19,7],
        [8,5,12,3,10,1,11,24,9,22,14,20,13,21,18,23,16,25,17,2,15,4,19,6],
        [7,5,6,3,4,1,2,24,25,22,23,20,21,12,18,11,17,14,19,13,16,10,15,9],
        [10,12,11,3,1,5,24,7,22,6,20,4,21,2,23,25,14,18,13,17,16,19,15,8],
        [9,12,5,3,7,1,6,24,4,22,2,20,25,21,23,11,18,14,17,13,19,16,8,15],
        [12,9,3,5,1,7,24,6,22,4,20,2,21,25,23,10,18,8,17,19,14,16,13,15],
        [11,9,10,5,7,3,6,1,4,24,2,22,25,20,23,21,8,18,19,17,16,14,15,13],
        [14,1,24,3,22,5,20,7,21,6,23,4,25,2,18,9,17,10,19,8,16,11,15,12],
        [13,1,3,24,5,22,7,20,6,21,4,23,2,25,9,18,10,17,8,19,11,16,12,15],
        [16,18,17,22,20,24,21,1,23,3,25,5,2,7,4,6,19,9,8,10,11,13,12,14],
        [15,18,24,22,1,20,3,21,5,23,7,25,6,2,4,17,9,19,10,8,13,11,14,12],
        [18,15,22,24,20,1,21,3,23,5,25,7,2,6,4,16,9,13,10,14,8,11,19,12],
        [17,15,16,24,1,22,3,20,5,21,7,23,6,25,4,2,13,9,14,10,11,8,12,19],
        [20,22,21,24,23,1,25,3,2,5,4,7,6,15,9,16,10,13,8,14,11,17,12,18],
        [19,22,15,24,17,1,16,3,18,5,13,7,14,6,9,4,11,2,10,25,12,23,8,21],
        [22,19,24,15,1,17,3,16,5,18,7,13,6,14,4,9,2,11,25,10,23,12,8,20],
        [21,19,20,15,17,24,16,1,18,3,13,5,14,7,9,6,11,4,10,2,12,25,8,23],
        [24,19,1,15,3,17,5,16,7,18,6,13,4,14,2,9,25,11,10,21,12,20,8,22],
        [23,19,21,15,20,17,22,16,18,1,13,3,14,5,9,7,11,6,10,4,12,2,8,25],
        [1,19,3,15,5,17,7,16,6,18,4,13,2,14,9,23,11,21,10,20,12,22,8,24]
    ],
    'first_row' : 1,
    'table_font_size' : "8pt",
    'find_lines_args' : {
        'mirrored' : True,
    },
    'draw_plines_args' : {
        'size_px' : 600.0,
    },
    'draw_lines_args' : {
        'size_px' : 800.0,
        'scale_x' : 3.0,
    },
},


################################################################################

'kobon_27_225tri_1' : {
    'entry_title' : '27-Line Solution #1 (225 Triangles) by P.Savchuk ' + 
                    '(table found using Kissat)',
    'entry_table' : kobon_27_1,
    'first_row' : 1,
    'table_font_size' : "6pt",
    'find_lines_args' : {
        "angles_coefficient" : 0.005,
        "rotational_symmetry" : 3,
    },
    'draw_plines_args' : {
        'title_text' : 'by Pavlo Savchuk (2025)',
        'size_px' : 600.0,
    },
    'draw_lines_args' : {
        'title_text' : 'by Pavlo Savchuk (2025)',
        'size_px' : 3000.0,
        'scale_x' : 1.1,
        'scale_y' : 1.1,
    },
},


################################################################################

'kobon_27_225tri_2' : {
    'entry_title' : '27-Line Solution #2 (225 Triangles) by P.Savchuk ' + 
                    '(table found using Kissat)',
    'entry_table' : kobon_27_2,
    'first_row' : 6,
    'table_font_size' : "6pt",
    'find_lines_args' : {
        "rotational_symmetry" : 3,
        "main_coefficient" : 0.5,
        "ineq_epsilon" : 0.03,
    },
    'draw_plines_args' : {
        'title_text' : 'by Pavlo Savchuk (2025)',
        'size_px' : 600.0,
    },
    'draw_lines_args' : {
        'title_text' : 'by Pavlo Savchuk (2025)',
        'size_px' : 3000.0,
        'scale_x' : 1.1,
        'scale_y' : 1.1,
    },
},

################################################################################

'kobon_27_225tri_2_fisheye' : {
    'entry_title' : '27-Line Solution #2 in a fish-eye projection',
    'entry_table' : kobon_27_2,
    'first_row' : 6,
    'table_font_size' : "6pt",
    'find_lines_args' : {
        "rotational_symmetry" : 3,
        "main_coefficient" : 0.5,
        "ineq_epsilon" : 0.03,
    },
    'draw_plines_args' : {
        'title_text' : 'by Pavlo Savchuk (2025)',
        'size_px' : 600.0,
    },
    'draw_lines_args' : {
        'title_text' : 'by Pavlo Savchuk (2025)',
        'size_px' : 1000.0,
        'scale_x' : 1.1,
        'scale_y' : 1.1,
        'fisheye' : True,
        'factor'  : 0.45,
        'delta_l' : 4.5,
        'tri_seg_count' : 25,
    },
},


################################################################################

'kobon_28_238tri' : {
    'entry_title' : '28-Line Solution (238 Triangles) by P.Savchuk ' + 
                    '(based on 27-line solution)\n' + 
                    '* Image is a close-up, some triangles can be cropped',
    'entry_table' : lineorder.add_1_2_line(kobon_27_1, False),
    'first_row' : 1,
    'table_font_size' : "6pt",
    'find_lines_args' : {
    },
    'draw_plines_args' : {
        'title_text' : 'by Pavlo Savchuk (2025)',
        'size_px' : 600.0,
    },
    'draw_lines_args' : {
        'title_text' : 'by Pavlo Savchuk (2025)',
        'size_px' : 3000.0,
        'scale_x' : 28.0 * 4.0,
        'scale_y' : 28.0 * 4.0,
    },
},


################################################################################

'kobon_29_261tri' : {
    'entry_title' : '29-Line Solution (261 Triangles). [Savchuk]\n' +
                    'Autogenerated, using gen_2nm1(kobon_15), ' +
                    'based on solution by Suzuki',
    'entry_table' : lineorder.gen_2nm1(
                        lineorder.reindex_table(kobon_15, 2))['table'],
    'first_row' : 1,
    'table_font_size' : "6pt",
    'find_lines_args' : {
    },
    'draw_plines_args' : {
        'size_px' : 700.0,
    },
    'draw_lines_args' : {
        'size_px' : 1000.0,
        'scale_x' : 2.5,
    },
},

################################################################################

'kobon_33_341tri' : {
    'entry_title' : '33-Line Solution (341 Triangles, Mirror Symmetry). ' + 
                    '[Savchuk]\nAutogenerated, using ' + 
                    'gen_2nm1_repeat([[3,2],[3,1],[2,1]], count=4)',
    'entry_table' : lineorder.gen_2nm1_repeat(
                        [[3,2],[3,1],[2,1]], count=4)['table'],
    'first_row' : 1,
    'table_font_size' : "6pt",
    'find_lines_args' : {
        'mirrored' : True,
        'ineq_epsilon' : 0.005,
    },
    'draw_plines_args' : {
        'size_px' : 800.0,
    },
    'draw_lines_args' : {
        'size_px' : 1400.0,
        'scale_x' : 2.5,
    },
},

################################################################################

# add your entries here ...

}


other = {

################################################################################

'9_lines' : {
    'entry_title' : 'An arrangement of 9 lines\nwithout symmetries',
    'entry_table' : [
        [9,8,7,6,5,4,3,2],
        [7,6,8,5,9,3,4,1],
        [5,6,7,8,9,2,4,1],
        [5,6,7,8,9,2,3,1],
        [4,3,6,7,8,2,9,1],
        [4,3,5,7,2,8,9,1],
        [4,3,5,6,2,8,9,1],
        [4,3,5,2,6,7,9,1],
        [4,3,2,5,6,7,8,1],
    ],
    'first_row' : 1,
    'table_font_size' : "10pt",
    'find_lines_args' : {
        'ineq_epsilon' : 0.3,
        'ineq_max' : 20.0,
        'min_angle' : 0.2,
    },
    'draw_plines_args' : {
        'size_px' : 400.0,
    },
    'draw_lines_args' : {
        'size_px' : 400.0,
    },
},

################################################################################

'9_no_sym_20tri' : {
    'entry_title' : '9 lines without symmetries',
    'entry_table' : [
        [2,3,4,8,6,7,5,9,],
        [1,3,8,4,7,6,9,5,],
        [1,2,8,9,7,6,4,5,],
        [1,8,2,7,9,6,3,5,],
        [6,8,7,1,9,2,3,4,],
        [5,8,1,7,2,9,4,3,],
        [8,5,1,6,2,4,9,3,],
        [7,5,6,1,4,2,3,9,],
        [1,5,2,6,4,7,3,8,],
    ],
    'first_row' : 1,
    'table_font_size' : "10pt",
    'find_lines_args' : {
        'ineq_epsilon' : 0.3,
        'ineq_max' : 20.0,
        'min_angle' : 0.2,
    },
    'draw_plines_args' : {
        'size_px' : 400.0,
    },
    'draw_lines_args' : {
        'size_px' : 400.0,
    },
},

################################################################################

# add your entries here ...

}


ERROR_PNG_FILENAME = "gallery/imgs/error.svg"

entry_template = """
<hr>
<h2>{entry_title}</h2>
<table>
    <colgroup>
        <col span="1" style="width: 20%;">
        <col span="1" style="width: 40%;">
        <col span="1" style="width: 40%;">
    </colgroup>
    <tbody>
        <tr>
            <td><pre class='tab' style='font-size:{f_size}; text-align:left;'>{table}</pre></td>
            <td><img src="{plines_svg_fname}" /></td>
            <td><img src="{lines_svg_fname}" /></td>
        </tr>
    </tbody>
</table>
"""

def generate_std_gallery(entries, html_name, title):
    print("Generating `{}.html`...".format(html_name))

    gallery_html = lineorder.gallery_html_header.format(
        title=title.replace("<br>", " - "), header=title)

    for key, entry in entries.items():
        print("    Generating " + key + " ...")
        entry_table = entry['entry_table']
        entry_table = lineorder.reindex_table(entry_table, entry['first_row'])

        # Generate pseudolines SVG

        pseudolines_svg_filename = ERROR_PNG_FILENAME
        pseudolines_svg = lineorder.draw_pseudolines(
            entry_table, **entry['draw_plines_args'])
        
        if pseudolines_svg['status'] == 'OK':
            pseudolines_svg_filename = "imgs/" + key + "_pseudolines.svg"
            with open("gallery/" + pseudolines_svg_filename, "w") as text_file:
                text_file.write(pseudolines_svg['svg'])

        # Get a straightened arrangement

        result = lineorder.find_lines(entry_table, **entry['find_lines_args'])
        lines_svg_filename = ERROR_PNG_FILENAME

        if result['status'] == 'OK':
            result_svg = lineorder.draw_lines(
                result['lines'], **entry['draw_lines_args'])
            
            if result_svg['status'] == 'OK':
                lines_svg_filename = "imgs/" + key + "_lines.svg"
                with open("gallery/" + lines_svg_filename, "w") as text_file:
                    text_file.write(result_svg['svg'])
        
        table_str = "["
        for row in entry_table:
            table_str += "["
            for cross_point in row:
                table_str += str(cross_point).replace(", ",",") + ","
            table_str = table_str[:-1] + "],<br> "
        table_str = table_str[:-6] + "]"

        # Add this entry to the gallery
        gallery_html += entry_template.format(
            entry_title = entry['entry_title'].replace("\n","<br>"),
            table = table_str,
            plines_svg_fname = pseudolines_svg_filename,
            lines_svg_fname = lines_svg_filename,
            f_size = entry['table_font_size'],
            )


    # Create gallery HTML file
    gallery_html += "\n<hr>\n\n</body>\n"
    with open("gallery/" + html_name + ".html", "w") as text_file:
        text_file.write(gallery_html)

    print("...DONE\n")

################################################################################

generate_std_gallery(
    kobon, "kobon", "LineOrder Gallery #1<br>Kobon triangle problem")

generate_std_gallery(
    other, "other", "LineOrder Gallery #3<br>Other Examples")
